<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 1. 실제 데이터 소스 설정 (DB 연결 설정) -->
	<bean id="realDataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@ktj0514.synology.me:1521:xe" />
		<property name="username" value="c##project3team" />
		<property name="password" value="1234" />
	</bean>


	<!-- 2. P6Spy 데이터 소스 설정 (쿼리 로깅을 위해 p6spy 사용) -->
	<bean id="dataSource" class="com.p6spy.engine.spy.P6DataSource">
		<constructor-arg ref="realDataSource" />
	</bean>

	<!-- 3. MyBatis와 연결된 SqlSessionFactory 설정 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSession">
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 4. MyBatis SqlSessionTemplate 설정 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate"
		id="sqlSessionTemplate">
		<constructor-arg ref="sqlSession" index="0" />
	</bean>

	<!-- 5. 트랜잭션 관리 설정 -->
	<bean
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		id="transactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 6. AOP를 이용한 트랜잭션 관리 설정 -->
	<tx:advice transaction-manager="transactionManager"
		id="txAdvice">
		<tx:attributes>
			<tx:method name="select*" read-only="true"
				rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>


	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<aop:config proxy-target-class="true">
		<aop:pointcut
			expression="execution(* com.e3i3.moduerp..*Impl.*(..))"
			id="serviceMethod" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="serviceMethod" id="transactionAdvisor" />
	</aop:config>



</beans>










