<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EmpMgtMapper">

	<!-- EmpMgtDTO에 대한 resultMap -->
	<resultMap id="empMgtResult"
		type="com.e3i3.moduerp.empmgt.model.dto.EmpMgtDTO">
		<result property="uuid" column="UUID" /> <!-- UUID 추가 -->
		<result property="empName" column="EMP_NAME" />
		<result property="departmentName" column="DEPARTMENT_NAME" /> <!-- 추가된 부분 -->
		<result property="jobId" column="JOB_ID" />
		<result property="email" column="EMP_EMAIL" />
		<result property="phone" column="USER_PHONE" />
		<result property="address" column="ADDRESS" />
		<result property="bizNumber" column="BIZ_NUMBER" />
	</resultMap>

	<!-- 모든 직원 정보를 조회하는 쿼리 -->
	<select id="getAllEmployees" resultMap="empMgtResult">
		SELECT E.UUID,  <!-- UUID 추가 -->
		E.EMP_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME,
		E.JOB_ID, E.EMP_EMAIL,
		E.USER_PHONE, E.ADDRESS, E.BIZ_NUMBER
		FROM EMPLOYEE E
		JOIN DEPARTMENT D
		ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
	</select>

	<!-- 특정 UUID로 직원 데이터를 조회하는 쿼리 -->
	<select id="selectEmployeeByUUID" parameterType="String"
		resultMap="empMgtResult">
		SELECT * FROM (
		SELECT E.UUID,
		E.EMP_NAME,
		E.DEPARTMENT_ID,
		D.DEPARTMENT_NAME,
		E.JOB_ID,
		E.EMP_EMAIL,
		E.USER_PHONE,
		E.ADDRESS,
		E.BIZ_NUMBER
		FROM EMPLOYEE E
		JOIN DEPARTMENT D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
		WHERE E.UUID = #{uuid}
		) WHERE ROWNUM = 1
	</select>



	<!-- 새로운 직원 데이터를 삽입하는 쿼리 -->
	<insert id="createEmployee">
		INSERT INTO EMPLOYEE (
		UUID, EMP_NAME,  <!-- UUID 추가 -->
		DEPARTMENT_ID, JOB_ID, EMP_EMAIL, USER_PHONE, ADDRESS, BIZ_NUMBER
		)
		VALUES (
		#{uuid}, #{empName}, #{departmentId}, #{jobId}, #{email},
		#{phone},
		#{address}, #{bizNumber}
		)
	</insert>

	<!-- 특정 UUID로 직원 데이터를 업데이트하는 쿼리 -->
	<update id="updateEmployee"
		parameterType="com.e3i3.moduerp.empmgt.model.dto.EmpMgtDTO">
		UPDATE EMPLOYEE
		SET EMP_NAME = #{empName}, DEPARTMENT_ID =
		#{departmentId}, JOB_ID = #{jobId},
		EMP_EMAIL = #{email}, USER_PHONE =
		#{phone}, ADDRESS = #{address}
		WHERE UUID = #{uuid}  <!-- UUID로 업데이트 -->
	</update>

	<!-- 특정 UUID로 직원 데이터를 삭제하는 쿼리 -->
	<delete id="deleteEmployeeByUUID" parameterType="String">
		DELETE FROM EMPLOYEE WHERE UUID = #{uuid}  <!-- UUID로 삭제 -->
	</delete>

	<!-- 특정 BIZ_NUMBER로 직원 데이터를 조회하는 쿼리 : 조회창 -->
	<select id="getEmployeesByBizNumber" resultMap="empMgtResult"
		parameterType="string">
		SELECT E.UUID,  <!-- UUID 추가 -->
		E.EMP_NAME, E.DEPARTMENT_ID, MAX(D.DEPARTMENT_NAME) AS
		DEPARTMENT_NAME,
		E.JOB_ID, E.EMP_EMAIL,
		E.USER_PHONE, E.ADDRESS,
		E.BIZ_NUMBER
		FROM EMPLOYEE E
		JOIN DEPARTMENT D
		ON E.DEPARTMENT_ID =
		D.DEPARTMENT_ID
		WHERE E.BIZ_NUMBER = #{bizNumber}
		GROUP BY E.UUID,
		E.EMP_NAME, E.DEPARTMENT_ID, E.JOB_ID, E.EMP_EMAIL,
		E.USER_PHONE,
		E.ADDRESS, E.BIZ_NUMBER
	</select>

	<!-- 부서 및 직급 정보를 함께 조회하는 쿼리 -->
	<select id="getEmpNameDepart" parameterType="map"
		resultType="com.e3i3.moduerp.employee.model.dto.Employee">
		SELECT * FROM EMPLOYEE WHERE BIZ_NUMBER = #{bizNumber}
	</select>

	<!-- 사원명 조회 쿼리 -->
	<select id="getEmpNamesByBizNumber" resultType="string">
		SELECT EMP_NAME
		FROM EMPLOYEE WHERE BIZ_NUMBER = #{bizNumber}
	</select>

	<!-- 부서명 조회 쿼리 -->
	<select id="getDepartmentIdsByBizNumber" resultType="string">
		SELECT
		DEPARTMENT_ID FROM EMPLOYEE WHERE BIZ_NUMBER = #{bizNumber}
	</select>

	<!-- 직원명으로 직원 데이터를 조회하는 쿼리 -->
	<select id="selectEmployeesByEmpName" parameterType="map"
		resultMap="empMgtResult">
		SELECT *
		FROM EMPLOYEE
		WHERE EMP_NAME LIKE '%' ||
		#{filterText} || '%'
		AND BIZ_NUMBER = #{bizNumber}
		ORDER BY EMP_NAME ASC
	</select>

	<!-- 부서 ID 조회 -->
	<select id="selectEmployeesByDepartmentId" parameterType="map"
		resultMap="empMgtResult">
		SELECT *
		FROM EMPLOYEE
		WHERE DEPARTMENT_ID = #{departmentId}
		AND BIZ_NUMBER = #{bizNumber}
		ORDER BY DEPARTMENT_ID ASC
	</select>

	<!-- 직급명 조회 -->
	<select id="selectEmployeesByJobId" parameterType="map"
		resultMap="empMgtResult">
		SELECT *
		FROM EMPLOYEE
		WHERE JOB_ID = #{jobId}
		AND BIZ_NUMBER =
		#{bizNumber}
		ORDER BY JOB_ID ASC
	</select>

</mapper>
