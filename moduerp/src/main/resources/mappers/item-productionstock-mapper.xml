<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ItemMapper">

	<!-- 아이템 정보를 매핑하기 위한 resultMap -->
	<resultMap id="itemResultMap"
		type="com.e3i3.moduerp.item.model.dto.ItemDTO">
		<id property="itemId" column="item_id" />
		<result property="itemName" column="item_name" />
		<result property="itemDescription" column="item_description" />
		<result property="itemPrice" column="item_price" />
		<result property="stockQuantity" column="stock_quantity" />
		<result property="storageLocation" column="storage_location" />
		<result property="bizNumber" column="biz_number" />
		<!-- 기타 필드들 -->
	</resultMap>

	<!-- biz_number로 필터링된 item_name 리스트를 조회하는 쿼리 -->
	<select id="selectItemNamesByBizNumber" parameterType="String"
		resultType="String">
		SELECT item_name
		FROM item
		WHERE biz_number = #{bizNumber}
	</select>

	<!-- biz_number로 필터링된 stock_place 리스트를 조회하는 쿼리 -->
	<select id="selectStockPlacesByBizNumber" parameterType="String"
		resultType="String">
		SELECT DISTINCT stock_place
		FROM item
		WHERE biz_number = #{bizNumber}
	</select>


	<!-- 모든 아이템을 조회하는 쿼리 -->
	<select id="selectAllItems" resultMap="itemResultMap">
		SELECT *
		FROM item
	</select>

	<!-- 특정 아이템을 아이디로 조회하는 쿼리 -->
	<select id="selectItemById" parameterType="String"
		resultMap="itemResultMap">
		SELECT *
		FROM item
		WHERE item_id = #{itemId}
	</select>

	<!-- 아이템을 등록하는 쿼리 -->
	<insert id="insertItem"
		parameterType="com.e3i3.moduerp.item.model.dto.ItemDTO">
		INSERT INTO item (item_id, item_name, item_description, item_price,
		stock_quantity, storage_location, biz_number)
		VALUES (#{itemId}, #{itemName}, #{itemDescription}, #{itemPrice},
		#{stockQuantity}, #{storageLocation}, #{bizNumber})
	</insert>

	<!-- 아이템을 수정하는 쿼리 -->
	<update id="updateItem"
		parameterType="com.e3i3.moduerp.item.model.dto.ItemDTO">
		UPDATE item
		SET item_name = #{itemName},
		item_description = #{itemDescription},
		item_price = #{itemPrice},
		stock_quantity = #{stockQuantity},
		storage_location = #{storageLocation}
		WHERE item_id = #{itemId}
	</update>

	<!-- 아이템을 삭제하는 쿼리 -->
	<delete id="deleteItemById" parameterType="String">
		DELETE FROM item
		WHERE item_id = #{itemId}
	</delete>

</mapper>
